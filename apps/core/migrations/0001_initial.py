# Generated by Django 3.0.2 on 2023-07-23 17:03

import apps.core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('last_name', models.CharField(blank=True, max_length=60)),
                ('address', models.CharField(max_length=60)),
                ('address1', models.CharField(blank=True, max_length=60)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=60)),
                ('zip_code', models.CharField(blank=True, max_length=12)),
                ('nmc_street', models.CharField(blank=True, help_text='Nearest Major Cross Streets', max_length=80)),
                ('home_phone', phone_field.models.PhoneField(blank=True, max_length=31)),
                ('cell_phone', phone_field.models.PhoneField(blank=True, max_length=31)),
                ('email_address', models.EmailField(blank=True, max_length=254)),
                ('fax_number', phone_field.models.PhoneField(blank=True, max_length=31)),
                ('gate_code', models.CharField(blank=True, max_length=20)),
                ('entry_date', models.DateTimeField()),
            ],
            options={
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='Employee_Documents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(blank=True, max_length=250)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Employee Document',
                'verbose_name_plural': 'Employee Documents',
            },
        ),
        migrations.CreateModel(
            name='Jurisdiction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('appointment_time', models.TimeField(blank=True, null=True)),
                ('project_notes', models.TextField(blank=True)),
                ('priority', models.BooleanField(default=False)),
                ('priority_msg', models.TextField(blank=True)),
                ('contract_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=17, null=True)),
                ('lead_status', models.CharField(choices=[(1, 'none'), (2, 'open lead'), (3, 'archives'), (4, 'accounts receivable'), (5, 'job in progress'), (6, 'appointment scheduled')], default=1, max_length=1)),
                ('lead_cur_status', models.CharField(blank=True, choices=[(None, 'Select...'), ('CD', 'Cold Lead'), ('WM', 'Warm Lead'), ('HT', 'Hot Lead')], max_length=2, null=True)),
                ('entry_date', models.DateTimeField()),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Customer')),
            ],
            options={
                'ordering': ['-entry_date'],
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payroll_id', models.DecimalField(blank=True, decimal_places=0, max_digits=1000, null=True)),
                ('archived', models.BooleanField(default=False)),
                ('date_archived', models.DateField(blank=True, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('date_processed', models.DateField(blank=True, null=True)),
                ('date_entered', models.DateField(blank=True, null=True)),
                ('submitted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=models.SET(apps.core.models.set_deleted_user), to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_entered'],
            },
        ),
        migrations.CreateModel(
            name='ProjectGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SourceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Installer_Payroll',
            fields=[
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.Payroll')),
                ('job_file', models.FileField(upload_to='other/')),
                ('job_name', models.CharField(max_length=100)),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('job_address', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('helper', models.BooleanField(default=False)),
                ('helper_name', models.CharField(blank=True, max_length=100, null=True)),
                ('work_performed', models.TextField()),
                ('amount_owed', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('lead', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.Lead')),
                ('sale_date', models.DateField(blank=True, null=True)),
                ('association_approval', models.CharField(choices=[(None, 'Select...'), ('YS', 'Yes'), ('NO', 'No'), ('PW', 'Paper Work Submitted and Waiting for Approval'), ('AP', 'Approved'), ('DN', 'Denied')], default=None, max_length=4, null=True)),
                ('materials_ordered', models.BooleanField(default=False)),
                ('concrete_existing', models.CharField(blank=True, choices=[(None, 'Select...'), ('YS', 'yes'), ('CU', 'To be poured by customer'), ('SS', 'To be poured by Sunshield')], max_length=2)),
                ('footer_needed', models.CharField(blank=True, choices=[(None, 'Select...'), ('YS', 'yes'), ('NO', 'no')], max_length=2)),
                ('safety_stakes', models.BooleanField(default=False)),
                ('alumalattice', models.CharField(blank=True, choices=[(None, 'Select...'), ('CO', 'Combination Solid / Open Cover'), ('ST', 'Standard Aluminum Cover'), ('CP', 'Carport'), ('GU', 'Gutters')], max_length=2)),
                ('completion_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Job Status',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.Lead')),
                ('status', models.CharField(blank=True, choices=[(None, 'Select...'), ('PD', 'Paid in Full'), ('DP', 'Paid Deposit'), ('DU', 'Will Pay Upon Completion')], max_length=2)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('breakdown', models.CharField(blank=True, max_length=200)),
                ('archive_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff_Payroll',
            fields=[
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.Payroll')),
                ('week_start_date', models.DateField(blank=True, null=True)),
                ('monday_date', models.DateField(blank=True, null=True)),
                ('monday_in_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('monday_in_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('monday_out_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('monday_out_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('monday_tot', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('tuesday_date', models.DateField(blank=True, null=True)),
                ('tuesday_in_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('tuesday_in_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('tuesday_out_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('tuesday_out_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('tuesday_tot', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('wednesday_date', models.DateField(blank=True, null=True)),
                ('wednesday_in_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('wednesday_in_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('wednesday_out_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('wednesday_out_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('wednesday_tot', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('thursday_date', models.DateField(blank=True, null=True)),
                ('thursday_in_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('thursday_in_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('thursday_out_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('thursday_out_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('thursday_tot', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('friday_date', models.DateField(blank=True, null=True)),
                ('friday_in_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('friday_in_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('friday_out_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('friday_out_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('friday_tot', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('saturday_date', models.DateField(blank=True, null=True)),
                ('saturday_in_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('saturday_in_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('saturday_out_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('saturday_out_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('saturday_tot', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('sunday_date', models.DateField(blank=True, null=True)),
                ('sunday_in_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('sunday_in_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('sunday_out_hr', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('sunday_out_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('sunday_tot', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('weekly_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('payroll_notes', models.TextField(blank=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='other/')),
            ],
            options={
                'ordering': ['-week_start_date'],
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_address', models.CharField(max_length=120)),
                ('cust_called', models.DateField(blank=True, null=True)),
                ('service_schedule', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('phone_number', phone_field.models.PhoneField(blank=True, max_length=31)),
                ('archive', models.BooleanField(default=False)),
                ('installer', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'installer'}, null=True, on_delete=models.SET(apps.core.models.set_deleted_user), related_name='services_group', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-cust_called'],
            },
        ),
        migrations.CreateModel(
            name='Sales_Payroll',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('salesperson', models.CharField(blank=True, max_length=80, null=True)),
                ('job_name', models.CharField(max_length=100)),
                ('date_added', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=250, null=True)),
                ('commission', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('contract_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Payroll')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proj_type', models.CharField(max_length=80)),
                ('active', models.BooleanField(default=True)),
                ('group', models.ForeignKey(on_delete=models.SET(apps.core.models.set_deleted_group), to='core.ProjectGroup')),
            ],
            options={
                'ordering': ['proj_type'],
            },
        ),
        migrations.CreateModel(
            name='Pictures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photos', models.ImageField(upload_to='images/')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lead')),
            ],
            options={
                'ordering': ['-job'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('datetime', models.DateTimeField()),
                ('user_id', models.ForeignKey(on_delete=models.SET(apps.core.models.set_deleted_user), to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-datetime'],
            },
        ),
        migrations.AddField(
            model_name='lead',
            name='project_type',
            field=models.ManyToManyField(blank=True, to='core.ProjectType'),
        ),
        migrations.AddField(
            model_name='lead',
            name='salesperson',
            field=models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'salesperson'}, null=True, on_delete=models.SET(apps.core.models.set_deleted_user), related_name='salesperson_group', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lead',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=models.SET(apps.core.models.set_deleted_source_grp), to='core.SourceGroup'),
        ),
        migrations.CreateModel(
            name='EntryLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=200)),
                ('entry_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Customer')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Lead')),
                ('payroll', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Payroll')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Services')),
                ('user_id', models.ForeignKey(on_delete=models.SET(apps.core.models.set_deleted_user), to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-entry_date'],
            },
        ),
        migrations.CreateModel(
            name='Employee_Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='other/')),
                ('title', models.CharField(default='file title', max_length=80)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Employee_Documents')),
            ],
            options={
                'verbose_name': 'Employee File',
                'verbose_name_plural': 'Employee Files',
                'ordering': ['-record'],
            },
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='contracts/')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lead')),
            ],
            options={
                'ordering': ['-job'],
            },
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.Lead')),
                ('permit', models.CharField(blank=True, max_length=48)),
                ('status', models.CharField(choices=[(None, 'Select...'), ('YS', 'Yes'), ('NO', 'No'), ('WP', 'Waiting on Permit'), ('WE', 'Waiting for Engineering'), ('PW', 'Permit Approved Through Building Department (Waiting for Inspections)'), ('ID', 'Final Inspection Denied'), ('IA', 'Final Inspection Approved')], max_length=2)),
                ('description', models.TextField(blank=True)),
                ('archive', models.BooleanField(default=False)),
                ('archive_date', models.DateField(blank=True, null=True)),
                ('jurisdiction', models.ForeignKey(blank=True, null=True, on_delete=models.SET(apps.core.models.set_deleted_jurisdiction), to='core.Jurisdiction')),
            ],
        ),
        migrations.CreateModel(
            name='Installation',
            fields=[
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.Lead')),
                ('footer_dig_date', models.DateField(blank=True, null=True)),
                ('footer_pour_date', models.DateField(blank=True, null=True)),
                ('footer_inspection_date', models.DateField(blank=True, null=True)),
                ('install_schedule', models.DateField(blank=True, null=True)),
                ('expected_completion', models.DateField(blank=True, null=True)),
                ('installer', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'installer'}, null=True, on_delete=models.SET(apps.core.models.set_deleted_user), related_name='installer_group', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-install_schedule'],
            },
        ),
    ]
